# Production-optimized Docker Compose for AWS EC2 t3.micro
# This configuration is memory-optimized for 1GB RAM instances

version: '3.8'

services:
  # Main Trading Bot - Memory Optimized
  trading-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading-bot
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.8'
        reservations:
          memory: 256M
          cpus: '0.4'
    environment:
      - ENVIRONMENT=production
      - PYTHONUNBUFFERED=1
      - MALLOC_ARENA_MAX=2
      - PYTHONOPTIMIZE=1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config:ro
      - bot-state:/app/state
    ports:
      - "8080:8080"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || python -c \"import sys; sys.exit(0 if open('/app/logs/health.txt').read().strip() == 'OK' else 1)\" 2>/dev/null || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Lightweight monitoring
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup
    networks:
      - trading-network

volumes:
  bot-state:
    driver: local

networks:
  trading-network:
    driver: bridge